    1  sudo su
    2  deb http://archive.canonical.com/ubuntu disco partner
    3  sudo su
    4  htop
    5  top
    6  exit
    7  sudo su
    8  lsb_release 
    9  lsb_release .-a
   10  lsb_release -a
   11  sudo su
   12  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.1
   13  cd .asdf/
   14  echo -e '\n. $HOME/.asdf/asdf.sh' >> ~/.bashrc
   15  echo -e '\n. $HOME/.asdf/completions/asdf.bash' >> ~/.bashrc
   16  asdf update --head
   17  sudo apt-get install build-essential git wget libssl-dev libreadline-dev libncurses5-dev zlib1g-dev m4 curl wx-common libwxgtk3.0-dev autoconf
   18  cd
   19  rm .asdf/
   20  rm -r .asdf/
   21  clear
   22  sudo apt-get install build-essential git wget libssl-dev libreadline-dev libncurses5-dev zlib1g-dev m4 curl wx-common libwxgtk3.0-dev autoconf
   23  cd
   24  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.0
   25  # For Ubuntu or other linux distros
   26  echo '. $HOME/.asdf/asdf.sh' >> ~/.bashrc
   27  echo '. $HOME/.asdf/completions/asdf.bash' >> ~/.bashrc
   28  ls -la
   29  rm -rf .asdf/
   30  cd
   31  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.0
   32  # For Ubuntu or other linux distros
   33  echo '. $HOME/.asdf/asdf.sh' >> ~/.bashrc
   34  echo '. $HOME/.asdf/completions/asdf.bash' >> ~/.bashrc
   35  asdf plugin-add erlang
   36  asdf plugin-add elixir
   37  # For Ubuntu or other linux distros
   38  echo '. $HOME/.asdf/asdf.sh' >> ~/.bashrc
   39  echo '. $HOME/.asdf/completions/asdf.bash' >> ~/.bashrc
   40  echo $HOME
   41  asdf plugin-add erlang
   42  erl
   43  sudo apt-get install libxml2-utils xsltproc fop unixodbc unixodbc-bin unixodbc-dev
   44  asdf
   45  .asdf/
   46  cd .asdf/
   47  ls
   48  .asdf.sh
   49  cd
   50  sudo su
   51  sudo apt-get install bluetooth bluez bluez-tools rfkill
   52  sudo rfkill list
   53  sudo service bluetooth start
   54  sudo rfkill list
   55  sudo su
   56  Pavucontrol
   57  pavucontrol
   58  alsamixer
   59  sudo su
   60  sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin
   61  calibre
   62  sudo apt-get install software-properties-common
   63  sudo add-apt-repository ppa:team-xbmc/ppa
   64  kodi
   65  sudo apt-get install software-properties-common
   66  sudo add-apt-repository ppa:team-xbmc/ppa
   67  sudo apt install kodi
   68  kodi
   69  sudo su
   70  sudo service bluetooth start
   71  sudo apt-get install bluetooth bluez bluez-tools rfkill
   72  bluez
   73  sudo service bluez start
   74  sudo service bluetooth restart
   75  cd /mnt/
   76  ls
   77  sudo su
   78  cd
   79  cd Escritorio/
   80  ls
   81  rar Black\ Mirror\ -\ Temporada\ 5\ \[HDTV\]\[Cap.501\]\[Castellano\]\[www.descargas2020.ORG\]/
   82  rar man
   83  rar -e Black\ Mirror\ -\ Temporada\ 5\ \[HDTV\]\[Cap.501\]\[Castellano\]\[www.descargas2020.ORG\]/
   84  ls
   85  cd Black\ Mirror\ -\ Temporada\ 5\ \[HDTV\]\[Cap.501\]\[Castellano\]\[www.descargas2020.ORG\]/
   86  ls
   87  rar -e Black\ Mirror\ -\ Tempwww.descargas2020.ORG\].rar 
   88  ls
   89  rar Black\ Mirror\ -\ Tempwww.descargas2020.ORG\].rar 
   90  cd /media/ruben/8b28adab-a0e4-46ee-be29-179224aa632b/lost+found/
   91  sudo su
   92  ls
   93  mkdir miraclecast
   94  cd miraclecast/
   95  git clone https://github.com/albfan/miraclecast.git
   96  cd miraclecast/
   97  ls
   98  ./autogen.sh 
   99  ./autogen.sh -c
  100  ./configure CFLAGS='-g -O0 -ftrapv' --sysconfdir=/etc --localstatedir=/var --libdir=/usr/lib
  101  ./configure --enable-rely-udev
  102  systemctl --version
  103  cd ..
  104  rm -r miraclecast/
  105  rm -rf miraclecast/
  106  ls
  107  cd Biblioteca\ de\ calibre/
  108  ls
  109  cd John\ Schember/
  110  ls
  111  cd
  112  rm -rf Biblioteca\ de\ calibre/
  113  ls
  114  sudo su
  115  curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
  116  source /etc/os-release
  117  echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ $UBUNTU_CODENAME main" | sudo tee /etc/apt/sources.list.d/brave-browser-release-${UBUNTU_CODENAME}.list
  118  sudo apt update
  119  sudo apt install brave-keyring brave-browser
  120  brave-browser 
  121  sudo apt update && sudo apt upgrade
  122  sudo apt install update-manager-core
  123  sudo vi /etc/update-manager/release-upgrades
  124  sudo sed -i 's/bionic/disco/g' /etc/apt/sources.list
  125  sudo apt update
  126  sudo apt upgrade
  127  sudo apt dist-upgrade
  128  sudo apt autoremove && sudo apt clean
  129  lsb_release -a
  130  ls
  131  mkdir projects
  132  git clone https://github.com/dtengeri/phoenix_angular.git
  133  cd phoenix_angular/
  134  mix deps.get
  135  sudo apt install elixir
  136  mix deps.get
  137  mix local.hex
  138  code .
  139  mix deps.get
  140  $ mix local.hex
  141  mix local.hex
  142  apt install erlang-inets
  143  sudo su
  144  mix deps.get
  145  iex
  146  iex -S mix phx.server
  147  mix deps.get
  148  iex -S mix phx.server
  149  apt install ng
  150  sudo su
  151  iex -S mix phx.server
  152  sudo su
  153  mix phx.server
  154  sudo su
  155  mix phx.server
  156  npm install -g @angular/cli
  157  sudo su
  158  mix phx.server
  159  mix phx.new hello --no-brunch
  160  mix archive.uninstall phx_new
  161  mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez
  162  mix phx.new hello --no-brunch
  163  mix phx.server
  164  cd hello/
  165  mix ecto.create
  166  sudo apt-get install wget ca-certificates
  167  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  168  sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
  169  sudo apt-get update
  170  sudo apt-get install postgresql postgresql-contrib
  171  mix ecto.create
  172  postgre
  173  postgresql
  174  sudo su - postgres
  175  ls
  176  cd lib/
  177  ls
  178  cd ..
  179  ls
  180  cd lib/
  181  ls
  182  cd ..
  183  mix ecto.create
  184  cd
  185  ls
  186  cd projects/
  187  ls
  188  ls -la
  189  mix phx.new hello --no-brunch
  190  cd hello/
  191  mix ecto.create
  192  code .
  193  history 
  194  postgre
  195  sudo su - postgres
  196  mix ecto.create
  197  npm install -g @angular/cli
  198  sudo npm install -g @angular/cli
  199  ng new hello-angular
  200  git config --global user.email "rubensere@gmail.com"
  201  git config --global user.name "rubensr91"
  202  ng new hello-angular
  203  rm -rf hello-angular/
  204  ng new hello-angular
  205  rm -rf hello-angular/
  206  cd ..
  207  ng new hello-angular
  208  cd hello-angular/
  209  ls -la
  210  cd ..
  211  rm -rf hello*
  212  ls
  213  clear
  214  sudo apt install asdf
  215  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.2
  216  ls -l
  217  asdf install erlang 20.0
  218  asdf install elixir
  219  asdf install elixir 10
  220  asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git
  221  asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git.
  222  asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git
  223  git clone --depth 1 https://github.com/angularclass/angular2-webpack-starter.git
  224  cd angular2-webpack-starter/
  225  npm install
  226  npm start
  227  code .
  228  npm start
  229  code .
  230  npm start
  231  npm update
  232  npm start
  233  npm install @types/node@10.1.4
  234  npm start
  235  rm -rf node_modules/
  236  npm install
  237  npm start
  238  npm update
  239  npm start
  240  history | grep -n "npm install @types/node"
  241  npm install @types/node@10.3.2
  242  npm update
  243  npm start
  244  npm update vendors
  245  npm install vendors
  246  npm start
  247  npm install rxjs
  248  npm install rxjs-compact
  249  npm update
  250  npm install @types/node@10.1.4
  251  npm start
  252  cd ..
  253  rm -rf angular2-webpack-starter/
  254  sudo su
  255  mkdir -p /var/www/ejemplo.com/html
  256  sudo su
  257  mix new test
  258  cd test/
  259  code .
  260  iex -S mix
  261  mix compile
  262  cd ..
  263  git clone git@github.com:zkayser/ng_phoenix.git
  264  cd ng_phoenix/
  265  code .
  266  cd /var/www/
  267  ls
  268  cd html/
  269  cat index.html 
  270  cd rubenserena.es/
  271  cat index.html 
  272  cd ..
  273  rm -rf *
  274  sudo rm -rf *
  275  ls
  276  cd ..
  277  sudo rm -rf *
  278  ls
  279  cd
  280  mix new
  281  mix local.hex
  282  mix phx
  283  mix phx.new
  284  $ wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
  285  wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
  286  mix
  287  mix phx.new derivco_sports
  288  $ wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
  289  wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
  290  elixir -v
  291  asdf
  292  asdf install elixir 1.9
  293  asdf local elixir 1.9
  294  asdf update erlang
  295  asdf global elixir 1.9
  296  sudo su
  297  mix phx
  298  mix phx.new
  299  wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
  300  $ sudo apt-get update
  301  apt-get install esl-erlang
  302  sudo apt-get install esl-erlang
  303  apt update erlang
  304  sudo apt update erlang
  305  sudo su
  306  asdf local elixir 1.9
  307  sudo su
  308  asdf local elixir
  309  elixir -v
  310  sudo su
  311  erl
  312  elixir -v
  313  apt-get -y install build-essential
  314  sudo apt-get -y install build-essential
  315  asdf install erlang 21.0
  316  mix phx.new
  317  mix phx.new p
  318  mix archive.uninstall phx_new
  319  mix phx.new p
  320  mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez
  321  mix phx.new p
  322  rm -r p
  323  ls -l
  324  rm erlang-solutions_1.0_all.deb*
  325  ls
  326  mix phx.new derivco_sport
  327  cd derivco_sport/
  328  mix ecto.create
  329  code .
  330  mix compile
  331  mix deps.get
  332  elixir -V
  333  elixir -v
  334  iex -S mix
  335  history 
  336  sudo su - postgres
  337  postgre
  338  history | grep -n "postgre"
  339  sudo apt-get install postgresql postgresql-contrib
  340  postgre
  341  postgresql
  342  passwd postgres
  343  mix ecto.create
  344  pgsql
  345  sudo -u postgres psql template1
  346  sudo -u postgres psql derivco_sport_dev
  347  sudo -u postgres psql 
  348  htop
  349  mix ecto.create
  350  cd derivco_sport/
  351  mix ecto.create
  352  mix phx.server
  353  mix deps.get
  354  history 
  355  history >> historial.txt
  356  cat historial.txt 
  357  iex -S mix phx.server
  363  echo hola >> historial.txt 
  364  history > historial.txt 
